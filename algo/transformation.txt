#############################################################
#               ALGORITHME de TRANSFORMATION                #
#############################################################

FONCTION DE ABSTRACTELEMENT ET REDEFINIE DANS ELEMENTDONNEES
String obtenirDonnees()
Elle retourne "" pour abstractelement et noeud.texte pour elementdonnees

APPEL INITIAL DE LA FONCTION
racineXSL = documentXSL.racine.enfants.trouver(xsl:template match="/")
sortie = racineXSL.TransformationXSL(racineXML, "")

FONCTION DE ELEMENTNOEUD
String TransformationXSL(noeudXML, sortie)
    pour filsXSL de noeudCourantXSL faire
        1) si value-of
        2) si fore-each
        3) si rien
        4) si apply-template avec attribut
        5) si apply-template sans attribut
    retour sortie

1) value-of
si select est "." alors
    pour filsXML de noeudXML faire
        sortie += filsXML.obtenirDonnees()
sinon
    enfantsXML = tous les filsXML de noeudXML tels que filsXML.nom = select
    pour enfantXML de enfantsXML faire
        sortie += enfantXML.obtenirDonnees()

2) fore-each
enfantsXML = tous les filsXML de noeudXML tels que filsXML.nom = select
pour enfantXML de enfantsXML faire
    sortie += noeud_foreach.TransformationXSL(enfantXML, sortie)

3) Rien (pas de balises xsl sp√©ciale)
sortie += "<" + noeudXSL.nom
pour attribut de noeudXSL.attributs faire
    sortie += " " + attribut.nom + "=" + attribut.valeur
sortie += ">"
pour filsXSL de noeudXSL faire
    sortie += filsXSL.TransformationXSL(noeudXML, sortie)
sortie += "</" + noeudXSL.nom + ">"

4) apply-templates select="something"
templateXSL = noeudXSL template tel que noeudXSL.match = select
enfantsXML = tous les filsXML de noeudXML tels que filsXML.nom = select
pour enfantXML de enfantsXML faire
    sortie += templateXSL.TransformationXSL(enfantXML, sortie)

5) apply-templates sans attribut
enfantsXML = tous les filsXML de noeudXML
pour enfantXML de enfantsXML faire
    templateXSL = noeudXSL tel que noeudXSL.match = enfantXML.nom
    sortie += templateXSL.TransformationXSL(enfantXML, sortie)

FONCTION DE ABSTRACTELEMENT
String TransformationXSL(noeudXML, sortie)
    retourner ""

FONCTION DE ELEMENTDONNEES
String TransformationXSL(noeudXML, sortie)
    retourner noeudCourantXSL.texte